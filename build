#!/usr/bin/env bash

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
	DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
	SOURCE="$(readlink "$SOURCE")"
	[[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done

export DEPLOY_ROOT_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

source "$DEPLOY_ROOT_DIR/src/common.bash"

echo "Checking docker engine..."
ensure_docker_engine

docker rm -f "$CI_CONTAINER_NAME" &>/dev/null || true

echo "Building application..."

if [[ -f Dockerfile ]]; then
	echo "Building Dockerfile-based application..."
	# Build Dockerfile
	docker build -t "$CI_REGISTRY_IMAGE:$CI_REGISTRY_TAG" .
else
	# Build heroku-based application
	echo "缺少文件：Dockerfile"
fi

# Logging to Registry
# if [[ -n "$CI_BUILD_TOKEN" ]]; then
# 	echo "Logging to GitLab Container Registry with CI credentials..."
# 	docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"
# 	echo ""
# fi

echo "Pushing to GitLab Container Registry..."
docker push "$CI_REGISTRY_IMAGE:$CI_REGISTRY_TAG"
echo ""
